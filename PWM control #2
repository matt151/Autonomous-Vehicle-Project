const int enA = 17; //left motor power
const int enB = 16; //right motor power
const int IN1 = 3;   // Left motor(sitting in it) positive (forward @ high)
const int IN2 = 2;  //Left motor(sitting in it) negative (reverse @ high)
const int IN3 = 9;  //Right motor(sitting in it) postive ( forward @ high)
const int IN4 = 10; //Right motor(sitting in it) negative (reverse @ high)
char user_input;
void setup()
{
  Serial.begin(9600);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);

  
  Serial.println("Enter number for control option:");
  Serial.println("1. FORWARD");
  Serial.println("2. REVERSE");
  Serial.println("3. STOP");
  Serial.println();  
}

void loop() 
{
  
  while(Serial.available())
  {
    user_input = Serial.read();
    /*
    digitalWrite(IN1, LOW); //OFF
    digitalWrite(IN2, LOW);
    digitalWrite(IN3,LOW);
    digitalWrite(IN4,LOW);*/

    if (user_input =='1')
    {
      both_forward();
  
    }
    else if(user_input =='2')
    {
      both_forward50();
    }
    else if(user_input =='3')
    {
      both_stop();
    }
    else if (user_input=='4')
    { 
      right_forward();
    }
    else if(user_input =='5')
    {
      left_forward();
    }
    else if(user_input =='6')
    {
      right_reverse();
    }
    else if(user_input =='7')
    {
      left_reverse();
    }
    else if(user_input =='8')
    {
      right_stop();
    }
    else if(user_input =='9')
    {
      left_stop();
    }
      Serial.println("Invalid option entered.");
    }
  }


void both_forward ()
{
  //left motor forward
  analogWrite(enA,255);
  digitalWrite(IN1,HIGH);
  digitalWrite(IN2,LOW);

   //right motor forward
   analogWrite(enB,255);
    digitalWrite(IN3,HIGH);
     digitalWrite(IN4,LOW);
}

void both_forward50 ()
{
  //left motor forward
  analogWrite(enA,100);
  digitalWrite(IN1,HIGH);
  digitalWrite(IN2,LOW);

   //right motor forward
   analogWrite(enB,100);
    digitalWrite(IN3,HIGH);
     digitalWrite(IN4,LOW);
}

void right_forward()
{
//right motor forward
    digitalWrite(IN3,HIGH);
    digitalWrite(IN4,LOW);
 }

void left_forward()
{
  //left motor forward
  digitalWrite(IN1,HIGH);
  digitalWrite(IN2,LOW);
}

void both_reverse()
{
  //left motor reverse
  digitalWrite(IN1,LOW);
  digitalWrite(IN2,HIGH);

   //right motor revrse
    digitalWrite(IN3,LOW);
    digitalWrite(IN4,HIGH);
}

void right_reverse()
{
  //right motor revrse
    digitalWrite(IN3,LOW);
    digitalWrite(IN4,HIGH);
}

void left_reverse()
{
  //left motor reverse
  digitalWrite(IN1,LOW);
  digitalWrite(IN2,HIGH);
  
}

void both_stop()
{
  //left motor stop
  digitalWrite(IN1,LOW);
  digitalWrite(IN2,LOW);

   //right motor stop
    digitalWrite(IN3,LOW);
    digitalWrite(IN4,LOW);
}

void right_stop()
{
  //right motor stop
    digitalWrite(IN3,LOW);
    digitalWrite(IN4,LOW);
}

void left_stop()
{
  //left motor stop
  digitalWrite(IN1,LOW);
  digitalWrite(IN2,LOW);
}
